{"version":3,"file":"static/js/147.cbf5cbd7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Typography/typographyClasses.js","../node_modules/@mui/material/esm/utils/createSimplePaletteValueFilter.js","../node_modules/@mui/material/esm/Typography/Typography.js","../node_modules/@mui/material/esm/zero-styled/index.js","component/Footer.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","/**\n * Type guard to check if the object has a \"main\" property of type string.\n *\n * @param obj - the object to check\n * @returns boolean\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\n * Checks if the object conforms to the SimplePaletteColorOptions type.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param obj - The object to check\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns boolean\n */\nfunction checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a filter function used to filter simple palette color options.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\n */\nexport default function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {\n  return ([, value]) => value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  variants: [{\n    props: {\n      variant: 'inherit'\n    },\n    style: {\n      // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n      font: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  }, ...Object.entries(theme.typography).filter(([variant, value]) => variant !== 'inherit' && value && typeof value === 'object').map(([variant, value]) => ({\n    props: {\n      variant\n    },\n    style: value\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === 'string').map(([color]) => ({\n    props: {\n      color: `text${capitalize(color)}`\n    },\n    style: {\n      color: (theme.vars || theme).palette.text[color]\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.align !== 'inherit',\n    style: {\n      textAlign: 'var(--Typography-textAlign)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.noWrap,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.gutterBottom,\n    style: {\n      marginBottom: '0.35em'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.paragraph,\n    style: {\n      marginBottom: 16\n    }\n  }]\n})));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color];\n  // TODO: Remove `extendSxProp` in v7\n  const props = extendSxProp({\n    ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: {\n      ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import * as React from 'react';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport useTheme from \"../styles/useTheme.js\";\nimport GlobalStyles from \"../GlobalStyles/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { css, keyframes } from '@mui/system';\nexport { default as styled } from \"../styles/styled.js\";\nexport function globalCss(styles) {\n  return function GlobalStylesWrapper(props) {\n    return (\n      /*#__PURE__*/\n      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.\n      _jsx(GlobalStyles, {\n        styles: typeof styles === 'function' ? theme => styles({\n          theme,\n          ...props\n        }) : styles\n      })\n    );\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_createExtendSxProp() {\n  return extendSxProp;\n}\nexport { useTheme };","import { useState, useEffect } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\n\r\nconst Footer = () => {\r\n  const [dateTime, setDateTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setDateTime(new Date()), 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      component=\"footer\"\r\n      sx={{\r\n        background: \"linear-gradient(135deg, #141e30, #243b55 )\",\r\n        color: \"white\",\r\n        padding: \"15px 10%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n        fontSize: \"0.95rem\",\r\n      }}\r\n    >\r\n      <Typography sx={{ fontSize: \"0.9rem\", opacity: 0.8 }}>\r\n        {dateTime.toLocaleDateString()} | {dateTime.toLocaleTimeString()}\r\n      </Typography>\r\n      <Typography>\r\n        Made by <strong>Areej Malik</strong>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"names":["getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","createSimplePaletteValueFilter","additionalPropertiesToCheck","arguments","length","undefined","_ref","value","obj","main","hasCorrectMainProperty","hasOwnProperty","checkSimplePaletteColorValues","_excluded","_excluded2","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","extendSxProp","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","align","concat","capitalize","noWrap","gutterBottom","paragraph","memoTheme","_theme$palette","theme","margin","variants","style","font","lineHeight","letterSpacing","Object","entries","typography","filter","_ref2","map","_ref3","palette","_ref4","color","vars","text","_ref5","_ref6","_ref7","textAlign","_ref8","overflow","textOverflow","whiteSpace","_ref9","marginBottom","_ref0","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","React","inProps","ref","_useDefaultProps","useDefaultProps","themeProps","_objectWithoutProperties","isSxColor","_objectSpread","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","Footer","dateTime","setDateTime","useState","Date","useEffect","timer","setInterval","clearInterval","_jsxs","Box","sx","background","padding","display","justifyContent","alignItems","flexWrap","fontSize","children","Typography","opacity","toLocaleDateString","toLocaleTimeString"],"sourceRoot":""}