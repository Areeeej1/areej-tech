{"version":3,"file":"static/js/663.68ac06a9.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/memoTheme.js","../node_modules/@mui/material/esm/utils/memoTheme.js","../node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../node_modules/@mui/utils/esm/resolveProps/resolveProps.js","../node_modules/@mui/material/esm/utils/capitalize.js","../node_modules/@mui/system/esm/preprocessStyles.js","../node_modules/@mui/material/esm/styles/defaultTheme.js","../node_modules/@mui/system/esm/createStyled/createStyled.js","../node_modules/@mui/material/esm/styles/styled.js","../node_modules/@mui/material/esm/styles/slotShouldForwardProp.js","../node_modules/@mui/material/esm/styles/rootShouldForwardProp.js","../node_modules/@mui/system/esm/DefaultPropsProvider/DefaultPropsProvider.js","../node_modules/@mui/material/esm/DefaultPropsProvider/DefaultPropsProvider.js"],"sourcesContent":["import preprocessStyles from \"./preprocessStyles.js\";\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n// We need to pass an argument as `{ theme }` for PigmentCSS, but we don't want to\n// allocate more objects.\nconst arg = {\n  theme: undefined\n};\n\n/**\n * Memoize style function on theme.\n * Intended to be used in styled() calls that only need access to the theme.\n */\nexport default function unstable_memoTheme(styleFn) {\n  let lastValue;\n  let lastTheme;\n  return function styleMemoized(props) {\n    let value = lastValue;\n    if (value === undefined || props.theme !== lastTheme) {\n      arg.theme = props.theme;\n      value = preprocessStyles(styleFn(arg));\n      lastValue = value;\n      lastTheme = props.theme;\n    }\n    return value;\n  };\n}","import { unstable_memoTheme } from '@mui/system';\nconst memoTheme = unstable_memoTheme;\nexport default memoTheme;","/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\n/**\n * Compose classes from multiple sources.\n *\n * @example\n * ```tsx\n * const slots = {\n *  root: ['root', 'primary'],\n *  label: ['label'],\n * };\n *\n * const getUtilityClass = (slot) => `MuiButton-${slot}`;\n *\n * const classes = {\n *   root: 'my-root-class',\n * };\n *\n * const output = composeClasses(slots, getUtilityClass, classes);\n * // {\n * //   root: 'MuiButton-root MuiButton-primary my-root-class',\n * //   label: 'MuiButton-label',\n * // }\n * ```\n *\n * @param slots a list of classes for each possible slot\n * @param getUtilityClass a function to resolve the class based on the slot name\n * @param classes the input classes from props\n * @returns the resolved classes for all slots\n */\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}","import clsx from 'clsx';\n\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @param mergeClassNameAndStyle If `true`, merges `className` and `style` props instead of overriding them.\n *   When `false` (default), props override defaultProps. When `true`, `className` values are concatenated\n *   and `style` objects are merged with props taking precedence.\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props, mergeClassNameAndStyle = false) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName], mergeClassNameAndStyle);\n            }\n          }\n        }\n      } else if (propName === 'className' && mergeClassNameAndStyle && props.className) {\n        output.className = clsx(defaultProps?.className, props?.className);\n      } else if (propName === 'style' && mergeClassNameAndStyle && props.style) {\n        output.style = {\n          ...defaultProps?.style,\n          ...props?.style\n        };\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}","import capitalize from '@mui/utils/capitalize';\nexport default capitalize;","import { internal_serializeStyles } from '@mui/styled-engine';\nexport default function preprocessStyles(input) {\n  const {\n    variants,\n    ...style\n  } = input;\n  const result = {\n    variants,\n    style: internal_serializeStyles(style),\n    isProcessed: true\n  };\n\n  // Not supported on styled-components\n  if (result.style === style) {\n    return result;\n  }\n  if (variants) {\n    variants.forEach(variant => {\n      if (typeof variant.style !== 'function') {\n        variant.style = internal_serializeStyles(variant.style);\n      }\n    });\n  }\n  return result;\n}","'use client';\n\nimport createTheme from \"./createTheme.js\";\nconst defaultTheme = createTheme();\nexport default defaultTheme;","import styledEngineStyled, { internal_mutateStyles as mutateStyles, internal_serializeStyles as serializeStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from \"../createTheme/index.js\";\nimport styleFunctionSx from \"../styleFunctionSx/index.js\";\nimport preprocessStyles from \"../preprocessStyles.js\";\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-labels */\n/* eslint-disable no-lone-blocks */\n\nexport const systemDefaultTheme = createTheme();\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nfunction shallowLayer(serialized, layerName) {\n  if (layerName && serialized && typeof serialized === 'object' && serialized.styles && !serialized.styles.startsWith('@layer') // only add the layer if it is not already there.\n  ) {\n    serialized.styles = `@layer ${layerName}{${String(serialized.styles)}}`;\n  }\n  return serialized;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (_props, styles) => styles[slot];\n}\nfunction attachTheme(props, themeId, defaultTheme) {\n  props.theme = isObjectEmpty(props.theme) ? defaultTheme : props.theme[themeId] || props.theme;\n}\nfunction processStyle(props, style, layerName) {\n  /*\n   * Style types:\n   *  - null/undefined\n   *  - string\n   *  - CSS style object: { [cssKey]: [cssValue], variants }\n   *  - Processed style object: { style, variants, isProcessed: true }\n   *  - Array of any of the above\n   */\n\n  const resolvedStyle = typeof style === 'function' ? style(props) : style;\n  if (Array.isArray(resolvedStyle)) {\n    return resolvedStyle.flatMap(subStyle => processStyle(props, subStyle, layerName));\n  }\n  if (Array.isArray(resolvedStyle?.variants)) {\n    let rootStyle;\n    if (resolvedStyle.isProcessed) {\n      rootStyle = layerName ? shallowLayer(resolvedStyle.style, layerName) : resolvedStyle.style;\n    } else {\n      const {\n        variants,\n        ...otherStyles\n      } = resolvedStyle;\n      rootStyle = layerName ? shallowLayer(serializeStyles(otherStyles), layerName) : otherStyles;\n    }\n    return processStyleVariants(props, resolvedStyle.variants, [rootStyle], layerName);\n  }\n  if (resolvedStyle?.isProcessed) {\n    return layerName ? shallowLayer(serializeStyles(resolvedStyle.style), layerName) : resolvedStyle.style;\n  }\n  return layerName ? shallowLayer(serializeStyles(resolvedStyle), layerName) : resolvedStyle;\n}\nfunction processStyleVariants(props, variants, results = [], layerName = undefined) {\n  let mergedState; // We might not need it, initialized lazily\n\n  variantLoop: for (let i = 0; i < variants.length; i += 1) {\n    const variant = variants[i];\n    if (typeof variant.props === 'function') {\n      mergedState ??= {\n        ...props,\n        ...props.ownerState,\n        ownerState: props.ownerState\n      };\n      if (!variant.props(mergedState)) {\n        continue;\n      }\n    } else {\n      for (const key in variant.props) {\n        if (props[key] !== variant.props[key] && props.ownerState?.[key] !== variant.props[key]) {\n          continue variantLoop;\n        }\n      }\n    }\n    if (typeof variant.style === 'function') {\n      mergedState ??= {\n        ...props,\n        ...props.ownerState,\n        ownerState: props.ownerState\n      };\n      results.push(layerName ? shallowLayer(serializeStyles(variant.style(mergedState)), layerName) : variant.style(mergedState));\n    } else {\n      results.push(layerName ? shallowLayer(serializeStyles(variant.style), layerName) : variant.style);\n    }\n  }\n  return results;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  function styleAttachTheme(props) {\n    attachTheme(props, themeId, defaultTheme);\n  }\n  const styled = (tag, inputOptions = {}) => {\n    // If `tag` is already a styled component, filter out the `sx` style function\n    // to prevent unnecessary styles generated by the composite components.\n    mutateStyles(tag, styles => styles.filter(style => style !== styleFunctionSx));\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)),\n      ...options\n    } = inputOptions;\n    const layerName = componentName && componentName.startsWith('Mui') || !!componentSlot ? 'components' : 'custom';\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, {\n      shouldForwardProp: shouldForwardPropOption,\n      label: generateStyledLabel(componentName, componentSlot),\n      ...options\n    });\n    const transformStyle = style => {\n      // - On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      //   component stays as a function. This condition makes sure that we do not interpolate functions\n      //   which are basically components used as a selectors.\n      // - `style` could be a styled component from a babel plugin for component selectors, This condition\n      //   makes sure that we do not interpolate them.\n      if (style.__emotion_real === style) {\n        return style;\n      }\n      if (typeof style === 'function') {\n        return function styleFunctionProcessor(props) {\n          return processStyle(props, style, props.theme.modularCssLayers ? layerName : undefined);\n        };\n      }\n      if (isPlainObject(style)) {\n        const serialized = preprocessStyles(style);\n        return function styleObjectProcessor(props) {\n          if (!serialized.variants) {\n            return props.theme.modularCssLayers ? shallowLayer(serialized.style, layerName) : serialized.style;\n          }\n          return processStyle(props, serialized, props.theme.modularCssLayers ? layerName : undefined);\n        };\n      }\n      return style;\n    };\n    const muiStyledResolver = (...expressionsInput) => {\n      const expressionsHead = [];\n      const expressionsBody = expressionsInput.map(transformStyle);\n      const expressionsTail = [];\n\n      // Preprocess `props` to set the scoped theme value.\n      // This must run before any other expression.\n      expressionsHead.push(styleAttachTheme);\n      if (componentName && overridesResolver) {\n        expressionsTail.push(function styleThemeOverrides(props) {\n          const theme = props.theme;\n          const styleOverrides = theme.components?.[componentName]?.styleOverrides;\n          if (!styleOverrides) {\n            return null;\n          }\n          const resolvedStyleOverrides = {};\n\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          // eslint-disable-next-line guard-for-in\n          for (const slotKey in styleOverrides) {\n            resolvedStyleOverrides[slotKey] = processStyle(props, styleOverrides[slotKey], props.theme.modularCssLayers ? 'theme' : undefined);\n          }\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsTail.push(function styleThemeVariants(props) {\n          const theme = props.theme;\n          const themeVariants = theme?.components?.[componentName]?.variants;\n          if (!themeVariants) {\n            return null;\n          }\n          return processStyleVariants(props, themeVariants, [], props.theme.modularCssLayers ? 'theme' : undefined);\n        });\n      }\n      if (!skipSx) {\n        expressionsTail.push(styleFunctionSx);\n      }\n\n      // This function can be called as a tagged template, so the first argument would contain\n      // CSS `string[]` values.\n      if (Array.isArray(expressionsBody[0])) {\n        const inputStrings = expressionsBody.shift();\n\n        // We need to add placeholders in the tagged template for the custom functions we have\n        // possibly added (attachTheme, overrides, variants, and sx).\n        const placeholdersHead = new Array(expressionsHead.length).fill('');\n        const placeholdersTail = new Array(expressionsTail.length).fill('');\n        let outputStrings;\n        // prettier-ignore\n        {\n          outputStrings = [...placeholdersHead, ...inputStrings, ...placeholdersTail];\n          outputStrings.raw = [...placeholdersHead, ...inputStrings.raw, ...placeholdersTail];\n        }\n\n        // The only case where we put something before `attachTheme`\n        expressionsHead.unshift(outputStrings);\n      }\n      const expressions = [...expressionsHead, ...expressionsBody, ...expressionsTail];\n      const Component = defaultStyledResolver(...expressions);\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        Component.displayName = generateDisplayName(componentName, componentSlot, tag);\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n  return styled;\n}\nfunction generateDisplayName(componentName, componentSlot, tag) {\n  if (componentName) {\n    return `${componentName}${capitalize(componentSlot || '')}`;\n  }\n  return `Styled(${getDisplayName(tag)})`;\n}\nfunction generateStyledLabel(componentName, componentSlot) {\n  let label;\n  if (process.env.NODE_ENV !== 'production') {\n    if (componentName) {\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n    }\n  }\n  return label;\n}\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nfunction lowercaseFirstLetter(string) {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}","'use client';\n\nimport createStyled from '@mui/system/createStyled';\nimport defaultTheme from \"./defaultTheme.js\";\nimport THEME_ID from \"./identifier.js\";\nimport rootShouldForwardProp from \"./rootShouldForwardProp.js\";\nexport { default as slotShouldForwardProp } from \"./slotShouldForwardProp.js\";\nexport { default as rootShouldForwardProp } from \"./rootShouldForwardProp.js\";\nconst styled = createStyled({\n  themeId: THEME_ID,\n  defaultTheme,\n  rootShouldForwardProp\n});\nexport default styled;","// copied from @mui/system/createStyled\nfunction slotShouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport default slotShouldForwardProp;","import slotShouldForwardProp from \"./slotShouldForwardProp.js\";\nconst rootShouldForwardProp = prop => slotShouldForwardProp(prop) && prop !== 'classes';\nexport default rootShouldForwardProp;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport resolveProps from '@mui/utils/resolveProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PropsContext = /*#__PURE__*/React.createContext(undefined);\nfunction DefaultPropsProvider({\n  value,\n  children\n}) {\n  return /*#__PURE__*/_jsx(PropsContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DefaultPropsProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  value: PropTypes.object\n} : void 0;\nfunction getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name]) {\n    return props;\n  }\n  const config = theme.components[name];\n  if (config.defaultProps) {\n    // compatible with v5 signature\n    return resolveProps(config.defaultProps, props, theme.components.mergeClassNameAndStyle);\n  }\n  if (!config.styleOverrides && !config.variants) {\n    // v6 signature, no property 'defaultProps'\n    return resolveProps(config, props, theme.components.mergeClassNameAndStyle);\n  }\n  return props;\n}\nexport function useDefaultProps({\n  props,\n  name\n}) {\n  const ctx = React.useContext(PropsContext);\n  return getThemeProps({\n    props,\n    name,\n    theme: {\n      components: ctx\n    }\n  });\n}\nexport default DefaultPropsProvider;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport SystemDefaultPropsProvider, { useDefaultProps as useSystemDefaultProps } from '@mui/system/DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction DefaultPropsProvider(props) {\n  return /*#__PURE__*/_jsx(SystemDefaultPropsProvider, {\n    ...props\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DefaultPropsProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  value: PropTypes.object.isRequired\n} : void 0;\nexport default DefaultPropsProvider;\nexport function useDefaultProps(params) {\n  return useSystemDefaultProps(params);\n}"],"names":["arg","theme","undefined","styleFn","lastValue","lastTheme","props","value","preprocessStyles","composeClasses","slots","getUtilityClass","classes","arguments","length","output","slotName","slot","buffer","start","i","resolveProps","defaultProps","mergeClassNameAndStyle","_objectSpread","key","Object","prototype","hasOwnProperty","call","propName","defaultSlotProps","slotProps","slotKey","slotPropName","className","clsx","style","input","variants","_objectWithoutProperties","_excluded","result","internal_serializeStyles","isProcessed","forEach","variant","createTheme","systemDefaultTheme","shouldForwardProp","prop","shallowLayer","serialized","layerName","styles","startsWith","concat","String","defaultOverridesResolver","_props","processStyle","resolvedStyle","Array","isArray","flatMap","subStyle","rootStyle","otherStyles","serializeStyles","processStyleVariants","mergedState","results","variantLoop","ownerState","_props$ownerState","push","createStyled","themeId","defaultTheme","rootShouldForwardProp","slotShouldForwardProp","styleAttachTheme","object","_","isObjectEmpty","attachTheme","tag","inputOptions","mutateStyles","filter","styleFunctionSx","name","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","lowercaseFirstLetter","options","_excluded2","shouldForwardPropOption","charCodeAt","isStringTag","defaultStyledResolver","styledEngineStyled","label","generateStyledLabel","transformStyle","__emotion_real","modularCssLayers","isPlainObject","muiStyledResolver","expressionsHead","_len","expressionsInput","_key","expressionsBody","map","expressionsTail","_theme$components","styleOverrides","components","resolvedStyleOverrides","_theme$components2","themeVariants","inputStrings","shift","placeholdersHead","fill","placeholdersTail","outputStrings","raw","unshift","expressions","Component","muiName","withConfig","string","charAt","toLowerCase","slice","THEME_ID","PropsContext","React","useDefaultProps","_ref2","params","config","getThemeProps","useSystemDefaultProps"],"sourceRoot":""}